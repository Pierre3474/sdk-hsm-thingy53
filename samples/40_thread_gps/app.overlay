/dts-v1/;

/ {
    aliases {
        /* Si tu veux un alias câblé pour le noeud utilisateur */
        zephyr_user = &zephyr_user_node;
    };

    chosen {
        /* configuration de la console UART0 */
        zephyr,console = &uart0;
    };

    /* noeud personnalisé pour la charge batterie */
    zephyr_user_node: zephyr,user {
        battery-charge-gpios = <&gpio1 0 GPIO_PULL_UP | GPIO_ACTIVE_LOW>;
    };
};

/ {
    /* ADC pour mesurer voltage batterie via canal 2 */
    adc {
        #address-cells = <1>;
        #size-cells = <0>;

        channel@2 {
            reg = <2>;
            zephyr,gain = "ADC_GAIN_1";
            zephyr,reference = "ADC_REF_INTERNAL";
            zephyr,acquisition-time = <ADC_ACQ_TIME(ADC_ACQ_TIME_MICROSECONDS, 40)>;
            zephyr,input-positive = <NRF_SAADC_AIN2>;
            zephyr,resolution = <12>;
            zephyr,oversampling = <4>;
        };
    };
};

&i2c1 {
    status = "okay";
    clock-frequency = <I2C_BITRATE_FAST>;

    imu0: bmi270@68 {
        compatible = "bosch,bmi270";
        reg = <0x68>;
        status = "okay";
    };

    bmm150: bmm150@10 {
        compatible = "bosch,bmm150";
        reg = <0x10>;
        status = "okay";
    };

    bh1749: bh1749@38 {
        compatible = "rohm,bh1749";
        reg = <0x38>;
        status = "okay";
        int-gpios = <&gpio1 5 GPIO_PULL_UP | GPIO_ACTIVE_LOW>;
    };

    bme688: bme688@76 {
        compatible = "bosch,bme688";
        reg = <0x76>;
        status = "okay";
    };
};
